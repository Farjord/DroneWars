/* ========================================
   DRONE WARS - GLOBAL STYLES
   ======================================== */

/* === FONTS === */
@import url('https://fonts.googleapis.com/css2?family=Exo:wght@400;700&family=Orbitron:wght@400;700;900&display=swap');

/* === TAILWIND === */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* === THEME SYSTEM - CSS CUSTOM PROPERTIES === */
:root {
  /* Color System */
  --color-background: rgb(2 6 23); /* bg-slate-950 equivalent */
  --color-primary: rgb(59 130 246); /* blue-500 */
  --color-accent: rgb(6 182 212); /* cyan-500 */

  /* Hull Colors */
  --color-hull-healthy: rgb(74 222 128); /* bg-green-400 */
  --color-hull-damaged: rgb(239 68 68); /* bg-red-500 */

  /* Text Colors */
  --color-shields: rgb(103 232 249); /* text-cyan-300 */
  --color-energy: rgb(253 224 71); /* text-yellow-300 */
  --color-deployment: rgb(196 181 253); /* text-purple-400 */

  /* Font Families */
  --font-heading: 'Orbitron', sans-serif;
  --font-body: 'Exo', sans-serif;
}

/* === COMPONENT STYLES === */
@layer components {
  /* Button Components - Angular GameHeader Style */
  /* Single-element buttons with all styling in CSS */

  /* Base angular button styles */
  .btn-confirm, .btn-continue, .btn-cancel, .btn-pass, .btn-reset, .btn-utility, .btn-info {
    @apply relative;
    isolation: isolate; /* Creates stacking context for pseudo-element */
    padding: 8px 24px;
    border: none;
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0 100%);
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: transform 0.2s;
    cursor: pointer;
  }

  /* Pseudo-element creates dark background inside gradient border */
  .btn-confirm::before, .btn-continue::before, .btn-cancel::before, .btn-pass::before, .btn-reset::before, .btn-utility::before, .btn-info::before {
    content: '';
    position: absolute;
    inset: 1px;
    background: #111827; /* bg-gray-900 */
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 8px), calc(100% - 8px) 100%, 0 100%);
    z-index: -1;
  }

  /* Hover effect - scale up */
  .btn-confirm:hover:not(:disabled), .btn-continue:hover:not(:disabled),
  .btn-cancel:hover:not(:disabled), .btn-pass:hover:not(:disabled),
  .btn-reset:hover:not(:disabled), .btn-utility:hover:not(:disabled), .btn-info:hover:not(:disabled) {
    transform: scale(1.05);
  }

  /* Active/pressed effect - scale down slightly */
  .btn-confirm:active:not(:disabled), .btn-continue:active:not(:disabled),
  .btn-cancel:active:not(:disabled), .btn-pass:active:not(:disabled),
  .btn-reset:active:not(:disabled), .btn-utility:active:not(:disabled), .btn-info:active:not(:disabled) {
    transform: scale(0.98);
  }

  /* Disabled state */
  .btn-confirm:disabled, .btn-continue:disabled, .btn-cancel:disabled,
  .btn-pass:disabled, .btn-reset:disabled, .btn-utility:disabled, .btn-info:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Confirm/Continue buttons - Green gradient border */
  .btn-confirm, .btn-continue {
    background: linear-gradient(45deg, rgba(34, 197, 94, 0.8), rgba(22, 163, 74, 0.8));
    color: #86efac;
  }

  /* Cancel buttons - Red gradient border */
  .btn-cancel {
    background: linear-gradient(45deg, rgba(239, 68, 68, 0.8), rgba(220, 38, 38, 0.8));
    color: #fca5a5;
  }

  /* Pass buttons - Red gradient (same as cancel) */
  .btn-pass {
    background: linear-gradient(45deg, rgba(239, 68, 68, 0.8), rgba(220, 38, 38, 0.8));
    color: #fca5a5;
  }

  /* Pass button disabled state - gray gradient */
  .btn-pass:disabled {
    background: linear-gradient(45deg, rgba(75, 85, 99, 0.6), rgba(107, 114, 128, 0.6));
    color: #9ca3af;
  }

  /* Reset buttons - Yellow/Gold gradient border */
  .btn-reset {
    background: linear-gradient(45deg, rgba(234, 179, 8, 0.8), rgba(202, 138, 4, 0.8));
    color: #fde047;
  }

  /* Utility buttons - Grey gradient for functional actions */
  .btn-utility {
    background: linear-gradient(45deg, rgba(51, 65, 85, 0.8), rgba(71, 85, 105, 0.8));
    color: #cbd5e1;
  }

  /* Info buttons - Cyan gradient for informational toggles */
  .btn-info {
    background: linear-gradient(45deg, rgba(6, 182, 212, 0.8), rgba(34, 211, 238, 0.8));
    color: #ffffff;
  }

  /* === AI OPPONENT CARD === */
  /* Angular cards with background images for AI selection */
  .ai-opponent-card {
    position: relative;
    height: 220px;
    overflow: hidden;
    border: 3px solid #BB2F33;
    clip-path: polygon(0 0, 100% 0, 100% calc(100% - 12px), calc(100% - 12px) 100%, 0 100%);
    transition: all 0.3s ease;
    cursor: pointer;
    isolation: isolate;
  }

  .ai-opponent-card:hover {
    transform: scale(1.02);
  }

  .ai-opponent-card.selected {
    border-color: #ef4444;
    box-shadow: 0 0 15px rgba(239, 68, 68, 0.4);
  }

  .ai-opponent-card-bg {
    position: absolute;
    inset: 0;
    background-size: cover;
    background-position: center;
    filter: brightness(0.85);
    transition: filter 0.3s ease, transform 0.3s ease;
    z-index: -2;
  }

  .ai-opponent-card.selected .ai-opponent-card-bg {
    filter: brightness(1.0);
    transform: scale(1.30);
  }

  .ai-opponent-card-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0.15) 0%, rgba(0,0,0,0.4) 100%);
    z-index: -1;
  }

  .ai-opponent-card-content {
    position: relative;
    height: 100%;
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    z-index: 1;
  }
}

/* === UTILITY CLASSES === */
.btn-clipped {
  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 15px), calc(100% - 15px) 100%, 0 100%);
}

/* Font Family Utilities - Control font in one place via CSS variables */
.font-orbitron { font-family: 'Orbitron', sans-serif; }
.font-exo { font-family: 'Exo', sans-serif; }
.heading-font { font-family: var(--font-heading); }
.body-font { font-family: var(--font-body); }

/* === GAME UI UTILITY CLASSES === */
/* Hexagon shapes for game UI elements */
.hexagon {
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.hexagon-flat {
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

/* Grid background pattern */
.bg-grid-cyan {
  background-image: linear-gradient(rgba(34, 211, 238, 0.2) 1px, transparent 1px),
                    linear-gradient(90deg, rgba(34, 211, 238, 0.2) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Scrollbar hiding utility */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.no-scrollbar {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;     /* Firefox */
}

/* === GAME ANIMATIONS === */
/* Pulse glow effect for interceptors */
@keyframes pulse-glow {
  0%, 100% {
    filter: drop-shadow(0 0 2px rgba(255, 255, 0, 0.7))
            drop-shadow(0 0 3px rgba(255, 0, 0, 0.6));
  }
  50% {
    filter: drop-shadow(0 0 4px rgba(255, 255, 0, 1))
            drop-shadow(0 0 7px rgba(255, 0, 0, 0.8));
  }
}

.interceptor-glow {
  animation: pulse-glow 2s infinite ease-in-out;
}

/* Guardian glow animation for drones with GUARDIAN keyword */
@keyframes guardian-pulse {
  0%, 100% {
    box-shadow: 0 0 8px 2px rgba(0, 191, 255, 0.6),
                0 0 16px 4px rgba(0, 150, 255, 0.4);
  }
  25% {
    box-shadow: 0 0 10px 3px rgba(255, 255, 255, 0.8),
                0 0 20px 5px rgba(0, 191, 255, 0.6);
  }
  50% {
    box-shadow: 0 0 12px 3px rgba(0, 191, 255, 1),
                0 0 24px 6px rgba(0, 150, 255, 0.8);
  }
  75% {
    box-shadow: 0 0 10px 3px rgba(255, 255, 255, 0.8),
                0 0 20px 5px rgba(0, 191, 255, 0.6);
  }
}

.guardian-glow {
  animation: guardian-pulse 2s infinite ease-in-out;
}

/* Shake animation for hit effects */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.animate-shake {
  animation: shake 0.5s ease-in-out;
}

/* Explosion animation effect */
@keyframes explode {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(2);
    opacity: 0;
  }
}

.explosion {
  position: absolute;
  width: 100px;
  height: 100px;
  background-image: radial-gradient(circle, rgba(255,159,64,1) 0%, rgba(255,87,34,0.8) 40%, rgba(255,255,255,0) 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation: explode 1s ease-out forwards;
  pointer-events: none;
  z-index: 50;
}



@keyframes shake-damage {
  0%, 100% { transform: translateX(0) rotate(0deg); }
  10% { transform: translateX(-8px) rotate(-1deg); }
  20% { transform: translateX(8px) rotate(1deg); }
  30% { transform: translateX(-6px) rotate(-1deg); }
  40% { transform: translateX(6px) rotate(1deg); }
  50% { transform: translateX(-4px) rotate(-0.5deg); }
  60% { transform: translateX(4px) rotate(0.5deg); }
  70% { transform: translateX(-2px) rotate(0deg); }
  80% { transform: translateX(2px) rotate(0deg); }
  90% { transform: translateX(-1px) rotate(0deg); }
}

.animate-shake-damage {
  animation: shake-damage 0.5s ease-in-out;
  filter: brightness(1.3) saturate(1.5);
}


/* === GAME-SPECIFIC STYLES === */
.lane-background {
  background-image: url('/img/Space_Background.png'); /* Path from the 'public' folder */
  background-position: center center; /* This is the magic part that centers the image */
  background-repeat: no-repeat;       /* Prevents the image from tiling */
  /* We don't set background-size, so it defaults to 'auto', using the image's original size. */
}

/* === DECK BUILDER STYLES === */
.deck-builder-table {
  border-collapse: collapse;
}

.deck-builder-table th,
.deck-builder-table td {
  padding: 8px 12px;
  border-bottom: 1px solid rgba(71, 85, 105, 0.5);
  vertical-align: middle;
}

.deck-builder-table th {
  font-family: 'Orbitron', sans-serif;
  color: #67e8f9; /* cyan-300 */
  font-size: 0.875rem;
  text-transform: uppercase;
}

.deck-builder-table tr:last-child td {
  border-bottom: none;
}

.ability-chip {
  background-color: rgba(168, 85, 247, 0.2); /* purple-500 with alpha */
  color: #d8b4fe; /* purple-300 */
  padding: 2px 8px;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: bold;
  border: 1px solid rgba(168, 85, 247, 0.5);
}

.quantity-buttons {
  display: flex;
  gap: 4px;
  align-items: center;
}

.quantity-btn {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: #334155; /* slate-700 */
  color: #cbd5e1; /* slate-300 */
  font-weight: bold;
  border: 1px solid #475569; /* slate-600 */
  transition: all 0.2s ease-in-out;
}

.quantity-btn:hover:not(:disabled) {
  background-color: #475569; /* slate-600 */
  color: white;
}

.quantity-btn.selected {
  background-color: #0891b2; /* cyan-600 */
  color: white;
  border-color: #67e8f9; /* cyan-300 */
}

.quantity-btn:disabled {
  background-color: #1e293b; /* slate-800 */
  color: #475569; /* slate-600 */
  cursor: not-allowed;
}

.deck-list {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.deck-list-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: rgba(0,0,0,0.2);
  padding: 8px 12px;
  border-radius: 4px;
}

.filter-select {
    background-color: #1f2937; /* bg-slate-800 */
    border: 1px solid #4b5563; /* border-gray-600 */
    color: #d1d5db; /* text-gray-300 */
    padding: 0.5rem;
    border-radius: 0.375rem; /* rounded-md */
    width: 100%;
    font-size: 0.875rem; /* text-sm */
}

.deck-edit-btn {
  width: 32px;
  height: 32px;
  border-radius: 4px; /* square with slight rounding, not circular */
  background-color: #334155; /* slate-700 */
  color: #cbd5e1; /* slate-300 */
  font-weight: bold;
  font-size: 1rem;
  border: 1px solid #475569; /* slate-600 */
  transition: all 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
}

.deck-edit-btn:hover:not(:disabled) {
  background-color: #475569; /* slate-600 */
  color: white;
  border-color: #67e8f9; /* cyan-300 */
}

.deck-edit-btn:disabled {
  background-color: #1e293b; /* slate-800 */
  color: #475569; /* slate-600 */
  cursor: not-allowed;
  opacity: 0.5;
}

/* === MODAL STYLES === */
@layer components {
  /* Modal Overlay - Dark background that covers screen */
  .modal-overlay {
    @apply fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 p-4;
  }

  /* Modal Container - The modal box itself */
  .modal-container {
    @apply bg-gray-900 rounded-2xl border-2 border-purple-500 p-8 shadow-2xl shadow-purple-500/20 w-full relative;
  }

  /* Size variants */
  .modal-container-sm { @apply max-w-md; }
  .modal-container-md { @apply max-w-lg; }  /* default */
  .modal-container-lg { @apply max-w-xl; }
  .modal-container-xl { @apply max-w-2xl; }
  .modal-container-xxl { @apply max-w-4xl; }

  /* Modal Title */
  .modal-title {
    @apply text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-500 to-cyan-400 text-center mb-4;
  }

  /* Modal Text */
  .modal-text {
    @apply text-center text-gray-400;
  }

  /* Modal Close Button */
  .modal-close {
    @apply absolute top-4 right-4 text-gray-400 hover:text-white transition-colors;
  }
}

/* === ANIMATION KEYFRAMES === */
/* Card visual effect animations */
@keyframes laserFade {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes energyPulse {
  0% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(2); opacity: 0.5; }
  100% { transform: scale(3); opacity: 0; }
}

@keyframes nukeExpand {
  0% { transform: scale(0.1); opacity: 1; }
  50% { transform: scale(1); opacity: 0.8; }
  100% { transform: scale(1.5); opacity: 0; }
}

@keyframes nukeFlash {
  0% { opacity: 0.8; transform: scale(0.5); }
  10% { opacity: 1; transform: scale(1); }
  40% { opacity: 0.6; transform: scale(1.2); }
  100% { opacity: 0; transform: scale(1.5); }
}

@keyframes explosionParticle {
  0% {
    opacity: 1;
    transform: translate(0, 0) scale(1);
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
    transform: translate(var(--tx), var(--ty)) scale(0.5);
  }
}

@keyframes laserPulse {
  0%, 100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.5);
  }
}

@keyframes teleportExpand {
  0% {
    width: 20px;
    height: 20px;
    opacity: 1;
  }
  100% {
    width: 120px;
    height: 180px;
    opacity: 0;
  }
}

@keyframes teleportRing {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes teleportParticle {
  0% {
    transform: translate(-50%, -50%) rotate(var(--angle)) translateX(80px) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) rotate(var(--angle)) translateX(0px) scale(0.3);
    opacity: 0;
  }
}

@keyframes teleportGlow {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
  }
  50% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.5);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Card reveal animations */
@keyframes cardRevealLabelShow {
  0% {
    transform: translateY(-20px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes cardRevealDissolve {
  0% {
    opacity: 1;
    filter: brightness(1);
  }
  50% {
    opacity: 0.7;
    filter: brightness(1.5) saturate(1.5);
  }
  100% {
    opacity: 0;
    filter: brightness(2) saturate(2);
    transform: scale(0.95);
  }
}

@keyframes cardRevealScanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

/* Card reveal utility classes */
.card-reveal-label-show {
  animation: cardRevealLabelShow 0.3s ease-out forwards;
}

.card-reveal-dissolve {
  animation: cardRevealDissolve 0.3s ease-out forwards;
}

.card-reveal-scanline-active {
  animation: cardRevealScanline 1.5s linear infinite;
}

/* Phase announcement animations */
@keyframes phaseAnnouncementShine {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes phaseAnnouncementScanline {
  0% {
    top: -10%;
  }
  100% {
    top: 110%;
  }
}

/* Phase announcement utility classes */
.phase-announcement-text {
  position: relative;
}

.phase-announcement-shine {
  animation: phaseAnnouncementShine 2s linear infinite;
}

.phase-announcement-scanline-active {
  animation: phaseAnnouncementScanline 2s linear infinite;
}

/* Game End Animations */
@keyframes defeatGlow {
  0%, 100% {
    text-shadow: 0 0 20px rgba(255, 50, 50, 0.8),
                 0 0 40px rgba(255, 50, 50, 0.6),
                 0 0 60px rgba(255, 50, 50, 0.4);
  }
  50% {
    text-shadow: 0 0 30px rgba(255, 50, 50, 1),
                 0 0 60px rgba(255, 50, 50, 0.8),
                 0 0 90px rgba(255, 50, 50, 0.6);
  }
}

@keyframes screenFlicker {
  0%, 100% { opacity: 1; }
  10% { opacity: 0.8; }
  20% { opacity: 1; }
  30% { opacity: 0.9; }
  40% { opacity: 1; }
  50% { opacity: 0.85; }
  60% { opacity: 1; }
  70% { opacity: 0.9; }
  80% { opacity: 1; }
  90% { opacity: 0.95; }
}

@keyframes scanlineShutdown {
  0% {
    top: -100%;
    opacity: 1;
  }
  80% {
    opacity: 0.8;
  }
  100% {
    top: 100%;
    opacity: 0;
  }
}

@keyframes screenDistort {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-2px); }
  50% { transform: translateX(2px); }
  75% { transform: translateX(-1px); }
}

.defeat-glow {
  animation: defeatGlow 2s ease-in-out infinite;
}

.screen-flicker {
  animation: screenFlicker 0.3s ease-in-out infinite;
}

.scanline-shutdown {
  animation: scanlineShutdown 4s ease-out forwards;
}

.screen-distort {
  animation: screenDistort 0.1s ease-in-out infinite;
}

/* Drone floating animation */
@keyframes subtleSway {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  25% { transform: translateY(-2px) rotate(0.5deg); }
  75% { transform: translateY(-2px) rotate(-0.5deg); }
}

.drone-float {
  animation: subtleSway 5s ease-in-out infinite;
}

/* Heal effect animations */
@keyframes healFloat {
  0% {
    transform: translate(var(--start-x), var(--start-y));
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  80% {
    opacity: 0.8;
  }
  100% {
    transform: translate(var(--start-x), calc(var(--start-y) - var(--float-distance)));
    opacity: 0;
  }
}

@keyframes healPulse {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0;
  }
  20% {
    opacity: 0.8;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.6;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0;
  }
}

@keyframes healSparkle {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  25% {
    transform: scale(1.3);
    opacity: 0.7;
  }
  50% {
    transform: scale(0.8);
    opacity: 1;
  }
  75% {
    transform: scale(1.2);
    opacity: 0.7;
  }
}

/* Menu Title Animations - Layered glitch effects */
@keyframes menuTitleShine {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

@keyframes menuGradientCycle {
  0% {
    background-position: 0% center;
  }
  100% {
    background-position: 300% center;
  }
}


@keyframes menuTitleGlitchDistort {
  0% { transform: translateX(0); }
  /* Cycle 1 */
  1% { transform: translateX(-2px); }
  2% { transform: translateX(2px); }
  3% { transform: translateX(-1px); }
  4% { transform: translateX(0); }
  /* Cycle 2 */
  5% { transform: translateX(-2px); }
  6% { transform: translateX(2px); }
  7% { transform: translateX(-1px); }
  8% { transform: translateX(0); }
  /* Cycle 3 */
  9% { transform: translateX(-2px); }
  10% { transform: translateX(2px); }
  11% { transform: translateX(-1px); }
  12% { transform: translateX(0); }
  /* Cycle 4 */
  13% { transform: translateX(-2px); }
  14% { transform: translateX(2px); }
  15% { transform: translateX(-1px); }
  16% { transform: translateX(0); }
  /* Cycle 5 */
  17% { transform: translateX(-2px); }
  18% { transform: translateX(2px); }
  19% { transform: translateX(-1px); }
  20% { transform: translateX(0); }
  /* Cycle 6 */
  21% { transform: translateX(-2px); }
  22% { transform: translateX(2px); }
  23% { transform: translateX(-1px); }
  24% { transform: translateX(0); }
  /* Cycle 7 */
  25% { transform: translateX(-2px); }
  26% { transform: translateX(2px); }
  27% { transform: translateX(-1px); }
  28% { transform: translateX(0); }
  /* Cycle 8 */
  29% { transform: translateX(-2px); }
  30% { transform: translateX(2px); }
  31% { transform: translateX(-1px); }
  32% { transform: translateX(0); }
  /* Cycle 9 */
  33% { transform: translateX(-2px); }
  34% { transform: translateX(2px); }
  35% { transform: translateX(-1px); }
  36% { transform: translateX(0); }
  /* Cycle 10 */
  37% { transform: translateX(-2px); }
  38% { transform: translateX(2px); }
  39% { transform: translateX(-1px); }
  40% { transform: translateX(0); }
  100% { transform: translateX(0); }
}

@keyframes menuTitleOpacityGlitch {
  0% { opacity: 1; }
  /* Cycle 1 */
  5% { opacity: 0.8; }
  10% { opacity: 1; }
  15% { opacity: 0.9; }
  20% { opacity: 1; }
  /* Cycle 2 */
  25% { opacity: 0.85; }
  30% { opacity: 1; }
  35% { opacity: 0.95; }
  40% { opacity: 1; }
  /* Cycle 3 */
  45% { opacity: 0.8; }
  50% { opacity: 1; }
  55% { opacity: 0.9; }
  60% { opacity: 1; }
  /* Cycle 4 */
  65% { opacity: 0.85; }
  70% { opacity: 1; }
  75% { opacity: 0.95; }
  80% { opacity: 1; }
  100% { opacity: 1; }
}

@keyframes menuScanlineSlow {
  0% {
    top: 0;
    opacity: 0;
  }
  5% {
    opacity: 0.5;
  }
  80% {
    top: 100%;
    opacity: 0.5;
  }
  90% {
    top: 110%;
    opacity: 0;
  }
  100% {
    top: 110%;
    opacity: 0;
  }
}

@keyframes menuRGBSplitRed {
  0% {
    transform: translateX(0);
    opacity: 0;
  }
  5% {
    transform: translateX(3px);
    opacity: 0.8;
  }
  15% {
    transform: translateX(-2px);
    opacity: 0.7;
  }
  25% {
    transform: translateX(3px);
    opacity: 0.8;
  }
  35% {
    transform: translateX(-3px);
    opacity: 0.7;
  }
  45% {
    transform: translateX(2px);
    opacity: 0.8;
  }
  55% {
    transform: translateX(-2px);
    opacity: 0.7;
  }
  65% {
    transform: translateX(3px);
    opacity: 0.8;
  }
  75% {
    transform: translateX(-3px);
    opacity: 0.7;
  }
  85% {
    transform: translateX(2px);
    opacity: 0.8;
  }
  95% {
    transform: translateX(-1px);
    opacity: 0.6;
  }
  100% {
    transform: translateX(0);
    opacity: 0;
  }
}

@keyframes menuRGBSplitBlue {
  0% {
    transform: translateX(0);
    opacity: 0;
  }
  5% {
    transform: translateX(-3px);
    opacity: 0.8;
  }
  15% {
    transform: translateX(2px);
    opacity: 0.7;
  }
  25% {
    transform: translateX(-3px);
    opacity: 0.8;
  }
  35% {
    transform: translateX(3px);
    opacity: 0.7;
  }
  45% {
    transform: translateX(-2px);
    opacity: 0.8;
  }
  55% {
    transform: translateX(2px);
    opacity: 0.7;
  }
  65% {
    transform: translateX(-3px);
    opacity: 0.8;
  }
  75% {
    transform: translateX(3px);
    opacity: 0.7;
  }
  85% {
    transform: translateX(-2px);
    opacity: 0.8;
  }
  95% {
    transform: translateX(1px);
    opacity: 0.6;
  }
  100% {
    transform: translateX(0);
    opacity: 0;
  }
}

/* Menu Title Utility Classes */
.menu-title-shine {
  animation: menuTitleShine 8s linear infinite;
}

.menu-gradient-cycle {
  animation: menuGradientCycle 6s linear infinite;
}

.menu-title-glitch-distort {
  animation: menuTitleGlitchDistort 1.5s ease-in-out 1;
}

.menu-title-opacity-glitch {
  animation: menuTitleOpacityGlitch 1.5s ease-in-out 1;
}

.menu-scanline-slow {
  animation: menuScanlineSlow 3s linear 1;
}

.menu-rgb-split-red {
  animation: menuRGBSplitRed 1s ease-in-out 1;
}

.menu-rgb-split-blue {
  animation: menuRGBSplitBlue 1s ease-in-out 1;
}

/* Action Card Border Animations */
/* Rotating gradient for purple cards - Subtle and slow */
@keyframes cardBorderRotatePurple {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 400% 50%;
  }
}

/* Shimmer travel for silver cards - Metal reflecting sun */
@keyframes cardBorderShimmerSilver {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 400% 400%;
  }
}

/* Utility class for rotating purple border - Subtle and slow */
.card-border-rotate-purple {
  background: linear-gradient(
    90deg,
    rgba(147, 51, 234, 1.0) 0%,   /* purple-600 */
    rgba(147, 51, 234, 1.0) 10%,  /* purple-600 */
    rgba(147, 51, 234, 1.0) 20%,    /* purple-600 peak */
    rgba(107, 33, 168, 1.0) 30%,   /* purple-800 darker */
    rgba(147, 51, 234, 1.0) 40%,    /* purple-600 peak */
    rgba(147, 51, 234, 1.0) 50%,  /* purple-600 */
    rgba(147, 51, 234, 1.0) 60%,  /* purple-600 */
    rgba(59, 7, 100, 1.0) 70%,    /* purple-950 darkest */
    rgba(59, 7, 100, 1.0) 80%,   /* purple-950 darkest */
    rgba(59, 7, 100, 1.0) 90%,    /* purple-950 darkest */
    rgba(147, 51, 234, 1.0) 100%  /* purple-600 (loops) */
  );
  background-size: 400% 100%;
  animation: cardBorderRotatePurple 15s linear infinite;
}

/* Utility class for shimmering silver border - Diagonal shimmer suggesting clockwise motion */
.card-border-shimmer-silver {
  background: linear-gradient(
    135deg,
    rgba(148, 163, 184, 1.0) 0%,      /* slate-400 */
    rgba(148, 163, 184, 1.0) 10%,     /* slate-400 */
    rgba(148, 163, 184, 1.0) 15%,    /* slate-400 rise */
    rgba(203, 213, 225, 1.0) 20%,    /* slate-300 shimmer start */
    rgba(241, 245, 249, 1.0) 25%,    /* slate-100 bright reflection */
    rgba(203, 213, 225, 1.0) 30%,    /* slate-300 shimmer end */
    rgba(148, 163, 184, 1.0) 35%,    /* slate-400 fall */
    rgba(148, 163, 184, 1.0) 40%,     /* slate-400 */
    rgba(148, 163, 184, 1.0) 100%     /* slate-400 (rest) */
  );
  background-size: 400% 400%;
  animation: cardBorderShimmerSilver 12s linear infinite;
}